# from pyspark.sql import *
# from pyspark.sql.functions import *
#
# spark = SparkSession.builder.master("local").appName("test").getOrCreate()
# data="C:\\bigdata\\datasets\\asl.csv"
# df=spark.read.format("csv").option("header","true").load(data)
# df.createOrReplaceTempView("tab")
# res=spark.sql("select * from tab where age>40")
# res.show()



# from pyspark.sql import *
# from pyspark.sql.functions import *
#
# spark = SparkSession.builder.master("local").appName("test").getOrCreate()
# data="C:\\bigdata\\datasets\\us-500.csv"
# df=spark.read.format("csv").option("header","true").load(data)
# df.createOrReplaceTempView("tab")
# res=spark.sql("select * from tab ")
# res.show()


from pyspark.sql import *
from pyspark.sql.functions import *

# spark = SparkSession.builder.master("local").appName("test").getOrCreate()
# data="C:\\bigdata\\datasets\\us-500.csv"
# df=spark.read.format("csv").option("header","true").load(data)
# df.createOrReplaceTempView("tab")
# res=spark.sql("select * from tab ")
# -----dsl query
# res=df.where(col("state")=="CA")
# res=df.groupBy(col("state")).count().orderBy(col("count"),ascending=False)
# res.show()



# from pyspark.sql import *
# from pyspark.sql.functions import *
#
# spark = SparkSession.builder.master("local").appName("test").getOrCreate()
# data="C:\\bigdata\\datasets\\10000Records.csv"
# df=spark.read.format("csv").option("header","true").option("inferschema","true").load(data)
# df.createOrReplaceTempView("tab")
# # res=spark.sql("select * from tab ")
# df.show()

from pyspark.sql import *
from pyspark.sql.functions import *

spark = SparkSession.builder.master("local").appName("test").getOrCreate()
data = "C:\\bigdata\\datasets\\airport-codes.csv"
df=spark.read.format("csv").option("header","true").option("inferschema","true").load(data)
df.show()
df.printSchema()













































































































































































































































































































































































































































